{"blockDat":{},"dynamicDat":{"dynamic_variables":[],"dynamic_myblocks":[]},"glsl":"precision highp float;\n\nvarying vec2 v_texCoord;\nuniform sampler2D u_texture;\nuniform vec2 u_resolution;\nuniform float u_time;\n\n// Parámetros ajustables\n#define CURVATURE 0.15\n#define SCANLINE_COUNT 480.0\n#define SCANLINE_INTENSITY 0.2\n\n// Funciones\nfloat effectScanlines(vec2 uv) {\n    float y = uv.y * u_resolution.y;\n    return 1.0 - sin(y * 3.14159) * SCANLINE_INTENSITY;\n}\n\nvoid main() {\n    vec2 uv = v_texCoord;\n    \n    // 1. Distorsión de barril (Barrel Distortion)\n    vec2 center = vec2(0.5, 0.5);\n    vec2 dist = uv - center;\n    float r = dot(dist, dist) * CURVATURE;\n    uv = uv + dist * r;\n\n    // 2. Aberración cromática (Chromatic Aberration)\n    vec2 offset = r * 0.01;\n    vec3 color = vec3(\n        texture2D(u_texture, uv - offset).r,\n        texture2D(u_texture, uv).g,\n        texture2D(u_texture, uv + offset).b\n    );\n\n    // 3. Scanlines y viñeteado\n    float scanlines = effectScanlines(uv);\n    color *= scanlines;\n    \n    // 4. Oscurecimiento de los bordes (vignette)\n    float vignette = 1.0 - (length(dist) * 1.5);\n    vignette = max(vignette, 0.0);\n    color *= vignette;\n    \n    gl_FragColor = vec4(color, 1.0);\n}","isText":true,"savedVarState":{}}